#!/usr/bin/env node

'use strict'

const glob = require('glob')
const path = require('path')
const childProcess = require('child_process')
const CONFIG = require('./config')
const cleanDependencies = require('./lib/clean-dependencies')
const deleteMsbuildFromPath = require('./lib/delete-msbuild-from-path')
const dependenciesFingerprint = require('./lib/dependencies-fingerprint')
const installApm = require('./lib/install-apm')
const runApmInstall = require('./lib/run-apm-install')
const installScriptDependencies = require('./lib/install-script-dependencies')
const verifyMachineRequirements = require('./lib/verify-machine-requirements')

process.on('unhandledRejection', function (e) {
  console.error(e.stack || e)
  process.exit(1)
})

verifyMachineRequirements()

if (dependenciesFingerprint.isOutdated()) {
  cleanDependencies()
}

if (process.platform === 'win32') deleteMsbuildFromPath()

installScriptDependencies()
installApm()
childProcess.execFileSync(
  CONFIG.getApmBinPath(),
  ['--version'],
  {stdio: 'inherit'}
)
runApmInstall(CONFIG.repositoryRootPath)

glob(__dirname + "/../packages/*/package.json", function (er, files) {
  files.forEach(function (file) {
    const packagePath = path.dirname(file)
    console.log(`Installing ${path.basename(packagePath)}`)
    runApmInstall(packagePath)
  })

  dependenciesFingerprint.write()
})
